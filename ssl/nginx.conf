server {
  listen      443 ssl default_server;
  server_name localhost;
  ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
  # TLSv1 is insecure and shouldn’t be used. TLSv1.1 is weak.
  # For compliance reasons, TLSv1 should not be used.
  ssl_protocols TLSv1.2 TLSv1.3;
  # Only enable known strong SSL ciphers. 
  # It is a balancing act between using strong ciphers and compatability. 
  # A site scoring 100% on a cipher test, would not be compatible with all devices. 
  # The current set gives 95% on SSLLabs security test.
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
  ssl_prefer_server_ciphers on;
  # ecdh provides a nice default for nginx as not all openSSL implementations do it well
  ssl_ecdh_curve secp384r1;
  # session tickets don’t provide forward secrecy.
  ssl_session_tickets off;
  # Limit the SSL buffer size (default 16k iirc)
  ssl_buffer_size 4k;
  # Maintain SSL connections for 10 minutes
  ssl_session_cache shared:SSL:10m;
  # Switch of gzip compression as it can be vunerable. Enable if needed.
  gzip off;
  ssl_stapling on;
  ssl_stapling_verify on;
  # add headers to every request, to avoid cross-site scripting attacks
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  # Remove the nginx version number from responses to avoid leaking implementation details.
  server_tokens off;
  # Strict Transport Security headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

  # if ( $request_method !~ ^(POST|PUT|PATCH|GET|HEAD|DELETE)$ ) {
  # return 405;
  # }
  location / {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Scheme "https";
      proxy_set_header X-Forwarded-Port "443";
      proxy_set_header X-Forwarded-Ssl "on";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
      proxy_set_header X-XSS-Protection "1; mode=block";
      proxy_set_header X-Frame-Options DENY;
      proxy_set_header X-Content-Type-Options nosniff;
      # Hide return headers to avoid leaking implementation details
      proxy_hide_header X-Powered-By;
      proxy_hide_header X-Pact-Broker-Version;
      # Perform the proxy pass to our site
      proxy_pass http://pact-broker:9292;
  }
}

server {
  listen      80 default_server;
  server_name localhost;
  # Redirect all HTTP requests, to HTTPS. We drop any request parameters that were provided 
  # to avoid any parameter injection in our redirect to HTTPS.
  return 301 https://$host;

  location / {
      proxy_pass http://pact-broker:9292;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
  }
}
